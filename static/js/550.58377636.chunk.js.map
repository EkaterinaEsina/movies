{"version":3,"file":"static/js/550.58377636.chunk.js","mappings":"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","sources":["api.js","components/Footer/Footer.jsx","components/Header/Header.jsx","components/Main/Main.jsx","components/Layout/Layout.jsx","components/Preloader/Preloader.jsx","config.js","containers/Recipe/components/RecipeItem/RecipeItem.jsx","containers/Recipe/Recipe.jsx"],"sourcesContent":["import { API_MEALS_URL } from \"./config\";\n\nconst getAllCategories = async () => {\n  const url = `${API_MEALS_URL}/categories.php`;\n\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\nconst getFilteredCategories = async (categoryName) => {\n  const url = `${API_MEALS_URL}/filter.php?c=${categoryName}`;\n\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\nconst getMealById = async (id) => {\n  const url = `${API_MEALS_URL}/lookup.php?i=${id}`;\n\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\nexport {\n  getAllCategories,\n  getFilteredCategories,\n  getMealById,\n}","export const Footer = () => {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <footer className=\"page-footer green darken-1\">\n      <div className=\"footer-copyright\">\n        <div className=\"container\">\n        Â© {currentYear} Copyright Text\n\n        <a className=\"grey-text text-lighten-3 right\" href=\"#!\">Repository</a>\n        </div>\n      </div>\n    </footer>\n  );\n}","import { Link } from 'react-router-dom';\n\nexport const Header = (props) => {\n  const { title } = props;\n  \n  return (\n    <nav className=\"green darken-1\">\n      <div className=\"nav-wrapper\">\n        <Link to='/' className=\"brand-logo\">{title}</Link>\n\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li>\n            <Link to='/meals'>Meals</Link>\n          </li>\n          <li>\n            <Link to='/shop'>Shop</Link>\n          </li>\n          <li>\n            <Link to='/movies'>Movies</Link>\n          </li>\n          <li>\n            <Link to='/posts'>Posts</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}","import { useState } from \"react\";\n\nexport const Main = (props) => {\n  const { children } = props;\n\n  const [isClickerShown, setIsClickerShown] = useState(false);\n\n  return (\n    <main className=\"container content\">\n      {/* <button onClick={() => setIsClickerShown(!isClickerShown)}>Show clicker</button> */}\n      {/* {isClickerShown && children} */}\n      {children}\n    </main>\n  );\n}","import { Footer } from '../../components/Footer';\nimport { Header } from '../../components/Header';\nimport { Main } from '../../components/Main';\n\nexport const Layout = ({ title = 'Portfolio', children }) => {\n  return (\n    <div className=\"App\">\n      <Header title={title} />\n\n      <Main>\n        {children}\n      </Main>\n\n      <Footer />\n    </div>\n  );\n}","export const Preloader = () => {\n  return (\n    <div className=\"progress\">\n      <div className=\"indeterminate\"></div>\n    </div>\n  );\n};","export const API_SHOP_URL = 'https://fortniteapi.io/v1/shop?lang=ru';\n\nexport const API_MEALS_URL = 'https://themealdb.com/api/json/v1/1';","import { useNavigate } from 'react-router-dom';\n\nexport const RecipeItem = ({ recipe }) => {\n  const navigate = useNavigate();\n\n  if (!recipe) {\n    return null;\n  }\n\n  const {\n    idMeal,\n    strMeal,\n    strCategory,\n    strArea,\n    strInstructions,\n    strMealThumb,\n    strYoutube,\n    ...restRecipe\n  } = recipe;\n\n  const defaultPosterSrc = !strMealThumb\n  ? `https://via.placeholder.com/300x250?text=${strMeal}`\n  : strMealThumb;\n\n  return (\n    <>\n      <button className=\"btn\" onClick={() => navigate(-1)}>\n        <i className=\"material-icons\">arrow_back</i>\n        GO BACK\n      </button>\n\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <img alt=\"poster\" src={defaultPosterSrc} onClick={() => null}/>\n        </div>\n\n        <div className=\"card-content\">\n          <span className=\"card-title\">{strMeal}</span>\n\n          <p>Category: {strCategory}</p>\n          <p>Area: {strArea}</p>\n\n          <table className=\"centered\">\n            <thead>\n              <tr>\n                  <th>Ingrediaent</th>\n                  <th>Measure</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {\n                Object.keys(restRecipe).map((key) => {\n                  if (key.includes('Ingredient') && restRecipe[key].trim()) {\n                    const keyNumber = key.replace('strIngredient', '');\n\n                    return (\n                      <tr key={key}>\n                          <td>{restRecipe[key]}</td>\n                          <td>{restRecipe[`strMeasure${keyNumber}`]}</td>\n                      </tr>\n                    );\n                  }\n\n                  return null;\n                })\n              }\n            </tbody>\n          </table>\n\n          <br />\n\n          <p>Instructions: {strInstructions}</p>\n\n          <br />\n\n          {strYoutube && (\n            <div className=\"row\">\n              <h5>VIDEO RECIPE</h5>\n\n              <iframe\n                className=\"video-recipe\"\n                src={`https://www.youtube.com/embed/${strYoutube.split('=')[1]}`}\n                title={idMeal}\n                allowFullScreen\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Layout } from '../../components/Layout';\nimport { Preloader } from '../../components/Preloader';\n\nimport { RecipeItem } from './components/RecipeItem';\n\nimport { getMealById } from '../../api';\n\nconst Meal = (props) => {\n  const { name, recipeId } = useParams();\n\n  const [recipe, setRecipe] = useState([]);\n\n  useEffect(() => {\n    handleGetCategory();\n  }, [name]);\n\n  const handleGetCategory = () => {\n    getMealById(recipeId)\n      .then(data => setRecipe(data.meals[0]));\n  };\n\n  return (\n    <Layout title={`Category ${name} meals`}>\n      <div className=\"container content\">\n        {!recipe \n          ? <Preloader />\n          : <RecipeItem recipe={recipe} />\n        }\n      </div>\n    </Layout>\n  );\n};\n\nexport default Meal;"],"names":["getAllCategories","async","url","API_MEALS_URL","response","fetch","json","getFilteredCategories","categoryName","getMealById","id","Footer","currentYear","Date","getFullYear","_jsx","className","children","_jsxs","href","Header","props","title","Link","to","Main","isClickerShown","setIsClickerShown","useState","Layout","_ref","Preloader","API_SHOP_URL","RecipeItem","recipe","navigate","useNavigate","idMeal","strMeal","strCategory","strArea","strInstructions","strMealThumb","strYoutube","restRecipe","defaultPosterSrc","_Fragment","onClick","alt","src","Object","keys","map","key","includes","trim","keyNumber","replace","split","allowFullScreen","name","recipeId","useParams","setRecipe","useEffect","handleGetCategory","then","data","meals"],"sourceRoot":""}