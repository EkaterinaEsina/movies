{"version":3,"file":"static/js/934.5b8ffa5d.chunk.js","mappings":"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","sources":["components/Footer/Footer.jsx","components/Header/Header.jsx","components/Main/Main.jsx","components/Layout/Layout.jsx","components/Preloader/Preloader.jsx","containers/Posts/Post/Post.jsx","containers/Posts/Posts.jsx"],"sourcesContent":["export const Footer = () => {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <footer className=\"page-footer green darken-1\">\n      <div className=\"footer-copyright\">\n        <div className=\"container\">\n        Â© {currentYear} Copyright Text\n\n        <a className=\"grey-text text-lighten-3 right\" href=\"#!\">Repository</a>\n        </div>\n      </div>\n    </footer>\n  );\n}","import { Link } from 'react-router-dom';\n\nexport const Header = (props) => {\n  const { title } = props;\n  \n  return (\n    <nav className=\"green darken-1\">\n      <div className=\"nav-wrapper\">\n        <Link to='/' className=\"brand-logo\">{title}</Link>\n\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li>\n            <Link to='/shop'>Meals</Link>\n          </li>\n          <li>\n            <Link to='/shop'>Shop</Link>\n          </li>\n          <li>\n            <Link to='/movies'>Movies</Link>\n          </li>\n          <li>\n            <Link to='/posts'>Posts</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}","import { useState } from \"react\";\n\nexport const Main = (props) => {\n  const { children } = props;\n\n  const [isClickerShown, setIsClickerShown] = useState(false);\n\n  return (\n    <main className=\"container content\">\n      {/* <button onClick={() => setIsClickerShown(!isClickerShown)}>Show clicker</button> */}\n      {/* {isClickerShown && children} */}\n      {children}\n    </main>\n  );\n}","import { Footer } from '../../components/Footer';\nimport { Header } from '../../components/Header';\nimport { Main } from '../../components/Main';\n\nexport const Layout = ({ title = 'Portfolio', children }) => {\n  return (\n    <div className=\"App\">\n      <Header title={title} />\n\n      <Main>\n        {children}\n      </Main>\n\n      <Footer />\n    </div>\n  );\n}","export const Preloader = () => {\n  return (\n    <div className=\"progress\">\n      <div className=\"indeterminate\"></div>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\n\nimport { Preloader } from '../../../components/Preloader';\n\nexport const Post = (props) => {\n  const { post, removePost } = props;\n\n  const [comments, setComments] = useState([]);\n  const [isCommentsLoading, setIsCommentsLoading] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${post.id}/comments`)\n      .then(res => res.json())\n      .then(data => {\n        setComments(data);\n        setIsCommentsLoading(false);\n      })\n      .catch(err => console.error(err))\n  }, [])\n\n  return (\n    <div>\n      {isCommentsLoading\n        ? <Preloader />\n        : <div>\n            <div>\n              <div key={post.id}>\n                <div>Post#{post.id}</div>\n                <div>{post.body}</div>\n                {/* {comments} */}\n              </div>\n              \n              <button onClick={() => removePost(props.post.id)}>Remove this post</button>\n            </div>\n\n\n            {/* <div>\n              Comments \n              <ul>\n                {this.state.comments.map((comment) => (\n                  <li key={comment.id}>{comment.body}</li>\n                ))}\n              </ul>\n            </div> */}\n          </div>\n      }\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { Layout } from \"../../components/Layout\";\nimport { Preloader } from '../../components/Preloader';\nimport { Post } from './Post';\n\nconst Posts = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [isPostsLoading, setIsPostsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(res => res.json())\n      .then(data => {\n        setPosts(data);\n        setIsPostsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  const addPost = () => {\n    setPosts([\n      ...posts, \n      { \n        \"userId\": 1,\n        \"id\": Math.random(),\n        \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n        \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n      },\n    ]);\n  };\n\n  const removePost = (id) => {\n    setPosts([...posts.filter(post => post.id !== id)]);\n  };\n\n  return (\n    <Layout title=\"Posts\">\n      {isPostsLoading\n        ? <Preloader />\n        // : <div>{posts.slice(0, 3).map((post) => <Post key={post.id} post={post} />)}</div>\n        : (\n          <div>\n            {posts.map((post) => (\n              <Post key={post.id} post={post} addPost={addPost} removePost={removePost} />\n            ))}\n\n            <button onClick={addPost}>Add new post</button>\n          </div>\n        )\n      }\n    </Layout>\n  );\n}\n\nexport default Posts;\n"],"names":["Footer","currentYear","Date","getFullYear","_jsx","className","children","_jsxs","href","Header","props","title","Link","to","id","Main","isClickerShown","setIsClickerShown","useState","Layout","_ref","Preloader","Post","post","removePost","comments","setComments","isCommentsLoading","setIsCommentsLoading","useEffect","fetch","then","res","json","data","catch","err","console","error","body","onClick","posts","setPosts","isPostsLoading","setIsPostsLoading","addPost","Math","random","filter","map"],"sourceRoot":""}